@model WebApplication6.Models.SearchResult

@{
    ViewData["Title"] = $"Search results for {Model.SearchTerm}";

    var allCategories = new HashSet<string>();
    foreach (var game in Model.Games)
    {
        if (game.GameCatagories != null)
        {
            foreach (var gc in game.GameCatagories)
            {
                var name = gc.Catagory?.Name?.ToLower()
                    .Replace(" ", "")
                    .Replace("ə", "e")
                    .Replace("ü", "u")
                    .Replace("ı", "i")
                    .Replace("ö", "o");

                if (!string.IsNullOrEmpty(name))
                    allCategories.Add(name);
            }
        }
    }
}

<style>
    /* Steam-like Dark Theme Variables */
    :root {
        --steam-dark: #1b2838;
        --steam-darker: #171a21;
        --steam-blue: #66c0f4;
        --steam-light: #c7d5e0;
        --steam-green: #5ba32b;
        --steam-highlight: #2a475e;
        --steam-accent: #a4d007;
    }

    /* Search Results Page Styles */
    .search-header {
        background: linear-gradient(135deg, var(--steam-darker) 0%, var(--steam-dark) 100%);
        height: 250px;
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

        .search-header h2 {
            font-weight: 300;
            font-size: 2.5rem;
        }

    body {
        background-color: var(--steam-dark);
        color: var(--steam-light);
        font-family: 'Motiva Sans', Arial, sans-serif;
        margin: 0;
        padding: 0;
    }


    .game-card {
        background: linear-gradient(135deg, var(--steam-darker) 0%, var(--steam-dark) 100%);
        border: 1px solid rgba(255,255,255,0.1);
        border-radius: 4px;
        transition: all 0.3s ease;
        height: 100%;
    }

        .game-card:hover {
            transform: translateY(-5px);
            background: linear-gradient(135deg, var(--steam-highlight) 0%, var(--steam-dark) 100%);
            border-color: var(--steam-blue);
            box-shadow: 0 10px 25px rgba(0,0,0,0.3);
        }

    .game-card-img {
        height: 200px;
        width: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .game-card:hover .game-card-img {
        transform: scale(1.05);
    }

    .game-title {
        color: white;
        font-size: 1.1rem;
        font-weight: 500;
        margin-bottom: 8px;
    }

    .game-categories {
        color: #8f98a0;
        font-size: 0.85rem;
        margin-bottom: 15px;
        line-height: 1.4;
    }

    .view-btn {
        background: linear-gradient(135deg, var(--steam-blue) 0%, #4a90e2 100%);
        border: none;
        color: white;
        padding: 8px 15px;
        border-radius: 3px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

        .view-btn:hover {
            background: linear-gradient(135deg, #4a90e2 0%, var(--steam-blue) 100%);
            transform: translateY(-1px);
            color: white;
        }

    .filter-btn {
        background: transparent;
        border: 1px solid var(--steam-blue);
        color: var(--steam-blue);
        padding: 8px 15px;
        border-radius: 3px;
        margin: 0 5px 10px;
        transition: all 0.2s ease;
    }

        .filter-btn:hover, .filter-btn.active {
            background: var(--steam-blue);
            color: white;
            transform: translateY(-1px);
        }

    .no-results {
        color: var(--steam-light);
        background: var(--steam-darker);
        padding: 20px;
        border-radius: 4px;
        text-align: center;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .search-header h2 {
            font-size: 2rem;
        }

        .filter-btns {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }
    }
</style>

<div class="search-header">
    <h2>Search results for "@Model.SearchTerm"</h2>
</div>

<div class="container py-5">
    @if (!Model.Games.Any())
    {
        <div class="no-results">
            <i class="fas fa-search fa-2x mb-3"></i>
            <h4>No games found</h4>
            <p>Try different search terms or browse our <a href="/shop" style="color: var(--steam-blue);">game catalog</a></p>
        </div>
    }
    else
    {

        <div class="filter-btns text-center mb-4">
            <button class="filter-btn active" data-filter="all">All</button>
            @foreach (var cat in allCategories)
            {
                <button class="filter-btn" data-filter="@cat">@cat.ToUpper()</button>
            }
        </div>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var game in Model.Games)
            {
                var categoryClasses = string.Join(" ", game.GameCatagories?
                .Select(gc => gc.Catagory?.Name.ToLower()
                .Replace(" ", "")
                .Replace("ə", "e")
                .Replace("ü", "u")
                .Replace("ı", "i")
                .Replace("ö", "o")) ?? new List<string>());

                <div class="col game-card-wrapper @categoryClasses">
                    <div class="card game-card">
                        <a href="/game/detail/@game.Id">
                            <img src="@game.PhotoUrl" class="card-img-top game-card-img" alt="@game.Name" />
                        </a>
                        <div class="card-body d-flex flex-column">
                            <h5 class="game-title">@game.Name</h5>
                            <p class="game-categories">
                                @if (game.GameCatagories.Any())
                                {
                                    @string.Join(", ", game.GameCatagories.Select(gc => gc.Catagory?.Name))
                                }
                                else
                                {
                                    <span>No categories</span>
                                }
                            </p>
                            <div class="mt-auto">
                                <a href="/game/detail/@game.Id" class="btn view-btn">
                                    <i class="fas fa-eye me-1"></i> View Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.addEventListener('click', function () {
            document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
            this.classList.add('active');

            const filter = this.getAttribute('data-filter');
            const items = document.querySelectorAll('.game-card-wrapper');

            items.forEach(item => {
                if (filter === 'all' || item.classList.contains(filter)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });
    });
</script>